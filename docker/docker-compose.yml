services:
  # PostgreSQL with PGVector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: seedcore-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./setup/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql
    networks:
      - seedcore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    container_name: seedcore-neo4j
    environment:
      NEO4J_AUTH: ${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-password}
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"  # HTTP
      - "${NEO4J_BOLT_PORT:-7687}:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - seedcore-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SeedCore API Server
  seedcore-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: seedcore-api
    environment:
      # Database connections (using service names for internal communication)
      - PG_DSN=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-postgres}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      
      # Ray configuration (for remote Ray)
      - RAY_HOST=${RAY_HOST:-}
      - RAY_PORT=${RAY_PORT:-10001}
      - RAY_ADDRESS=${RAY_ADDRESS:-}
      - RAY_PASSWORD=${RAY_PASSWORD:-}
      - RAY_NAMESPACE=${RAY_NAMESPACE:-seedcore}
      - RAY_IGNORE_REINIT_ERROR=${RAY_IGNORE_REINIT_ERROR:-true}
      - RAY_CONNECTION_TIMEOUT=${RAY_CONNECTION_TIMEOUT:-30}
      
      # Redis configuration (optional)
      - REDIS_URL=${REDIS_URL:-}
      
      # API configuration
      - SEEDCORE_API_URL=${SEEDCORE_API_URL:-http://localhost:8000}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - seedcore-network
    volumes:
      - ../src:/app/src
    command: ["uvicorn", "src.seedcore.telemetry.server:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  seedcore-network:
    driver: bridge

