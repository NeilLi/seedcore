version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: seedcore-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./setup/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql
    networks:
      - seedcore-network

  mysql:
    image: mysql:8.0
    container_name: seedcore-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-seedcore}
      MYSQL_USER: ${MYSQL_USER:-seedcore}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./setup/init_mysql.sql:/docker-entrypoint-initdb.d/init_mysql.sql
    networks:
      - seedcore-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-host-cache
      --host-cache-size=0

  neo4j:
    image: neo4j:5.15
    container_name: seedcore-neo4j
    environment:
      NEO4J_AUTH: ${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-password}
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - seedcore-network

  redis:
    image: redis:alpine
    container_name: ray-redis
    ports:
      - "6379:6379"
    networks:
      - seedcore-network
    volumes:
      - redis-data:/data

  ray-head:
    build:
      context: .
      dockerfile: Dockerfile.ray
    container_name: ray-head
    shm_size: '2gb'
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    volumes:
      - ..:/app  # Mounts the project root into /app in the container
    ports:
      - "8265:8265"
      - "10001:10001"
    networks:
      - seedcore-network
    command: ray start --head --dashboard-host 0.0.0.0 --num-cpus 1 --block

  ray-worker:
    build:
      context: .
      dockerfile: Dockerfile.ray
    container_name: ray-worker
    shm_size: '2gb'
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    volumes:
      - ..:/app  # Mounts the project root into /app in the container
    depends_on:
      - ray-head
    networks:
      - seedcore-network
    command: ray start --address=ray-head:10001 --num-cpus 1 --block

  seedcore-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: seedcore-api
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    ports:
      - "80:8000"
    depends_on:
      postgres:
        condition: service_started
      neo4j:
        condition: service_started
      redis:
        condition: service_started
      ray-head:
        condition: service_started
      mysql:
        condition: service_started
    networks:
      - seedcore-network
    volumes:
      - ..:/app  # Mounts the project root into /app in the container
    command: ["uvicorn", "src.seedcore.telemetry.server:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  postgres_data:
  mysql_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis-data:

networks:
  seedcore-network:
    driver: bridge

