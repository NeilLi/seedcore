services:
  seedcore-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    image: seedcore-app:latest
    container_name: seedcore-app
    profiles: ["app"]
    working_dir: /app
    environment:
      PYTHONPATH: /app:/app/src
      RAY_ADDRESS: ray://seedcore-head-svc:10001
      RAY_NAMESPACE: seedcore-dev
      RAY_SERVE_ADDRESS: http://seedcore-head-svc:8000
      API_HOST: 0.0.0.0
      API_PORT: 8002
      SEEDCORE_NS: seedcore
      SEEDCORE_STAGE: dev
      # Database connections
      PG_DSN: postgresql://postgres:password@postgresql-pgbouncer:6432/postgres
      MYSQL_DATABASE_URL: mysql+mysqlconnector://seedcore:password@mysql:3306/seedcore
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
    env_file:
      - docker/.env
    ports:
      - "8003:8002"  # Map to different port to avoid conflicts
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      ray-head:
        condition: service_healthy
    networks:
      - seedcore-network
    volumes:
      - ..:/app  # Mounts the project root into /app in the container
      - ./artifacts:/data  # Mount artifacts directory for UUID access
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://127.0.0.1:8002/health', timeout=5).read()"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped

networks:
  seedcore-network:
    external: true


