# RAGFlow Configuration
# Integrates with existing Seedcore data stores: Postgres (pgvector), Redis, Neo4j

# Chart name overrides
nameOverride: ""
fullnameOverride: ""

image:
  # Official RAGFlow image - verified working
  repository: infiniflow/ragflow
  tag: "v0.20.3"
  pullPolicy: IfNotPresent
  
  # Alternative images (uncomment to use):
  # repository: infiniflow/ragflow
  # tag: "v0.20.2"  # Previous stable version
  # tag: "nightly"   # Latest development build
  # tag: "nightly-slim"  # Slim development build

replicaCount: 1

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: ragflow.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  requests:
    cpu: "200m"
    memory: "512Mi"
  limits:
    cpu: "500m"
    memory: "1Gi"

persistence:
  enabled: true
  size: "2Gi"
  storageClass: null

# Database configuration - connects to existing PostgreSQL with pgvector
database:
  host: "postgresql.seedcore-dev.svc.cluster.local"
  port: 5432
  name: "ragflow"
  user: "postgres"
  password: "password"
  sslMode: "disable"

# Redis configuration - connects to existing Redis instance
redis:
  host: "redis-master.seedcore-dev.svc.cluster.local"
  port: 6379
  password: ""
  db: 0

# Neo4j configuration - connects to existing Neo4j instance
neo4j:
  uri: "bolt://neo4j.seedcore-dev.svc.cluster.local:7687"
  user: "neo4j"
  password: "password"
  database: "neo4j"

# RAGFlow specific configuration
ragflow:
  # API server configuration
  api:
    host: "0.0.0.0"
    port: 8080
    workers: 4
  
  # Document processing
  document:
    maxFileSize: "100MB"
    supportedFormats: ["pdf", "docx", "txt", "md", "html"]
  
  # Vector search configuration
  vector:
    dimension: 1536  # OpenAI text-embedding-ada-002 default
    metric: "cosine"
    indexType: "ivfflat"
  
  # LLM configuration
  llm:
    provider: "openai"  # or "ollama", "azure", etc.
    model: "gpt-3.5-turbo"
    temperature: 0.1
    maxTokens: 2000
  
  # Embedding configuration
  embedding:
    provider: "openai"  # or "ollama", "sentence-transformers", etc.
    model: "text-embedding-ada-002"
    batchSize: 32

# Environment variables
env:
  - name: RAGFLOW_ENV
    value: "production"
  - name: RAGFLOW_LOG_LEVEL
    value: "INFO"
  - name: RAGFLOW_ENABLE_METRICS
    value: "true"

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /ready
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

# Service account configuration
serviceAccount:
  create: false
  name: ""
