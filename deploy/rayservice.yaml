apiVersion: ray.io/v1
kind: RayService
metadata:
  name: seedcore-svc
  namespace: seedcore-dev
spec:
  # ===================================================================
  #  Serve Configuration
  # ===================================================================  
  serveConfigV2: |
    # This ensures the HTTP proxy only runs on the head node.
    # proxy_location: HeadOnly
    http_options:
      host: 0.0.0.0
      # ✅ FIX: Port is now set to 8000 as requested.
      # WARNING: This will likely conflict with the other service on the head pod.
      port: 8000
      location: HeadOnly
    applications:
      # ✅ FIX: Replaced the single 'seedcore' app with two distinct applications.
      # - name: cognitive
      #   import_path: cognitive_serve_entrypoint:cognitive_app # Assumes the bound app is named 'cognitive_app'
      #   route_prefix: /cognitive
      - name: ml_serve
        # ✅ FIX: Point to the correct file and application factory function.
        # This uses serve_app.py, which is structured correctly for RayService.
        import_path: src.seedcore.ml.serve_app:create_serve_app
        route_prefix: /ml_serve

  # ===================================================================
  #  Ray Cluster Configuration
  # ===================================================================
  rayClusterConfig:
    rayVersion: "2.33.0"
    # -------------------------------------------------------------------
    #  Head Node Specification
    # -------------------------------------------------------------------
    headGroupSpec:
      # The Ray Operator will automatically create a Service for the head node.
      # It will also create the 'seedcore-svc-serve-svc' based on the serveConfigV2.
      # By setting proxy_location to HeadOnly, the operator correctly configures
      # the serve service to target ONLY the head pod.
      serviceType: ClusterIP
      rayStartParams:
        dashboard-host: "0.0.0.0"
        dashboard-port: "8265"
        ray-client-server-port: "10001"
        num-cpus: "2"

      template:
        spec:
          containers:
          - name: ray-head
            image: seedcore-serve:latest
            imagePullPolicy: IfNotPresent
            envFrom:
            - secretRef: { name: seedcore-env-secret }
            env:
            - name: RAY_OVERRIDE_RESOURCES
              value: '{"head_node": 1}'
            - name: RAY_NAMESPACE
              value: "seedcore-dev"
            - name: SEEDCORE_NS
              value: "seedcore-dev"
            - name: XGB_STORAGE_PATH
              value: "/app/data/models"
            ports:
              - name: gcs
                containerPort: 6379
              - name: dashboard
                containerPort: 8265
              - name: client
                containerPort: 10001
              # ✅ FIX: Updated the containerPort to match the new httpOptions port.
              - name: serve
                containerPort: 8000
              - name: metrics
                containerPort: 8080
            resources:
              requests:
                cpu: "500m"
                memory: "4Gi"
              limits:
                cpu: "2"
                memory: "8Gi"
            volumeMounts:
              - name: xgb-model-storage
                mountPath: /app/data
              - name: project-source-volume
                mountPath: /project
            # Probes are good practice for production readiness.
            startupProbe:
              exec:
                command: ["bash", "-lc", "wget --tries=1 -T 2 -q -O- http://127.0.0.1:52365/api/local_raylet_healthz | grep -q success"]
              periodSeconds: 5
              timeoutSeconds: 3
              failureThreshold: 72
            readinessProbe:
              exec:
                command: ["bash", "-lc", "wget --tries=1 -T 2 -q -O- http://127.0.0.1:52365/api/local_raylet_healthz | grep -q success"]
              periodSeconds: 5
              timeoutSeconds: 2
              failureThreshold: 3
            livenessProbe:
              exec:
                command: ["bash", "-lc", "wget --tries=1 -T 2 -q -O- http://127.0.0.1:52365/api/local_raylet_healthz | grep -q success"]
              periodSeconds: 5
              timeoutSeconds: 2
              failureThreshold: 120
          volumes:
            - name: project-source-volume
              hostPath:
                path: /project
                type: DirectoryOrCreate
            - name: xgb-model-storage
              persistentVolumeClaim:
                claimName: xgb-pvc

    # -------------------------------------------------------------------
    #  Worker Node Specification
    # -------------------------------------------------------------------
    workerGroupSpecs:
    - groupName: small
      replicas: 1
      rayStartParams:
        num-cpus: "2"
      template:
        spec:
          containers:
          - name: ray-worker
            image: seedcore-serve:latest
            imagePullPolicy: IfNotPresent
            envFrom:
            - secretRef: { name: seedcore-env-secret }
            env:
            - name: RAY_NAMESPACE
              value: "seedcore-dev"
            - name: SEEDCORE_NS
              value: "seedcore-dev"
            - name: XGB_STORAGE_PATH
              value: "/app/data/models"
            resources:
              requests:
                cpu: "500m"
                memory: "1Gi"
              limits:
                cpu: "2"
                memory: "4Gi"
            volumeMounts:
              - name: xgb-model-storage
                mountPath: /app/data
              - name: project-source-volume
                mountPath: /project
            readinessProbe:
              exec:
                command: ["bash", "-lc", "wget --tries=1 -T 2 -q -O- http://127.0.0.1:52365/api/local_raylet_healthz | grep -q success"]
              periodSeconds: 5
              timeoutSeconds: 2
              failureThreshold: 3
            livenessProbe:
              exec:
                command: ["bash", "-lc", "wget --tries=1 -T 2 -q -O- http://127.0.0.1:52365/api/local_raylet_healthz | grep -q success"]
              periodSeconds: 5
              timeoutSeconds: 2
              failureThreshold: 120
          volumes:
            - name: project-source-volume
              hostPath:
                path: /project
                type: DirectoryOrCreate
            - name: xgb-model-storage
              persistentVolumeClaim:
                claimName: xgb-pvc
