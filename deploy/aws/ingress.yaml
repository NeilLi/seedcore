apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: seedcore-ingress
  namespace: ${NAMESPACE}
  labels:
    app: seedcore
    component: ingress
  annotations:
    # AWS Load Balancer Controller
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: seedcore-alb
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # SSL/TLS Configuration
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/your-certificate-id
    
    # Security Headers
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }
    
    # Rate Limiting
    alb.ingress.kubernetes.io/actions.rate-limit: |
      {
        "Type": "forward",
        "ForwardConfig": {
          "TargetGroups": [
            {
              "ServiceName": "seedcore-api",
              "ServicePort": "80",
              "Weight": 100
            }
          ]
        }
      }
    
    # CORS Configuration
    alb.ingress.kubernetes.io/actions.cors: |
      {
        "Type": "forward",
        "ForwardConfig": {
          "TargetGroups": [
            {
              "ServiceName": "seedcore-api",
              "ServicePort": "80",
              "Weight": 100
            }
          ]
        }
      }
    
    # WAF Configuration (optional)
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:${AWS_REGION}:${AWS_ACCOUNT_ID}:regional/webacl/your-waf-id
    
    # Logging
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=your-logs-bucket,access_logs.s3.prefix=seedcore

spec:
  rules:
    - host: ${INGRESS_HOST}
      http:
        paths:
          # Main API
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: seedcore-api
                port:
                  number: 80
          
          # Ray Serve endpoints
          - path: /ml
            pathType: Prefix
            backend:
              service:
                name: seedcore-svc-serve-svc
                port:
                  number: 8000
          
          - path: /cognitive
            pathType: Prefix
            backend:
              service:
                name: seedcore-svc-serve-svc
                port:
                  number: 8000
          
          - path: /pipeline
            pathType: Prefix
            backend:
              service:
                name: seedcore-svc-serve-svc
                port:
                  number: 8000
          
          - path: /ops
            pathType: Prefix
            backend:
              service:
                name: seedcore-svc-serve-svc
                port:
                  number: 8000
          
          - path: /organism
            pathType: Prefix
            backend:
              service:
                name: seedcore-svc-serve-svc
                port:
                  number: 8000
          
          # NIM Services
          - path: /nim/retrieval
            pathType: Prefix
            backend:
              service:
                name: nim-retrieval
                port:
                  number: 8000
          
          - path: /nim/llama
            pathType: Prefix
            backend:
              service:
                name: nim-llama
                port:
                  number: 8000
          
          # Health checks
          - path: /health
            pathType: Exact
            backend:
              service:
                name: seedcore-api
                port:
                  number: 80
          
          - path: /readyz
            pathType: Exact
            backend:
              service:
                name: seedcore-api
                port:
                  number: 80
          
          # Ray Dashboard (optional, for debugging)
          - path: /ray-dashboard
            pathType: Prefix
            backend:
              service:
                name: seedcore-svc-head-svc
                port:
                  number: 8265
          
          # Default route
          - path: /
            pathType: Prefix
            backend:
              service:
                name: seedcore-api
                port:
                  number: 80

---
# Additional Ingress for internal services (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: seedcore-internal-ingress
  namespace: ${NAMESPACE}
  labels:
    app: seedcore
    component: internal-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: seedcore-internal-alb
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'

spec:
  rules:
    - host: seedcore-internal.${NAMESPACE}.svc.cluster.local
      http:
        paths:
          # Internal API access
          - path: /
            pathType: Prefix
            backend:
              service:
                name: seedcore-api
                port:
                  number: 80


