# This file is auto-generated by create_seedcore_skeleton.py
"""
Base Organ abstraction.
Each Organ hosts a local coordinator (Fast Loop) that selects agents and reports metrics
upstream to the energy system. See ยง4, ยง6, and ยง3.x gradient proxies.
"""

from __future__ import annotations
from typing import List, Any, TYPE_CHECKING

if TYPE_CHECKING:
    from ..agents.base import Agent

class Organ:
    def __init__(self, organ_id: str):
        self.organ_id = organ_id
        self.agents: List['Agent'] = []

    def register(self, agent: 'Agent'):
        self.agents.append(agent)

    def select_agent(self, task) -> 'Agent':
        # TODO: implement energy-aware scoring proxy
        if not self.agents:
            raise ValueError("No agents available in this organ.")
        return self.agents[0]

    def run_task(self, task):
        agent = self.select_agent(task)
        return agent.execute(task)
